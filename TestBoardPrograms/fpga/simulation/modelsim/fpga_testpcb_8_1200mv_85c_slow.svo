// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 16.0.0 Build 211 04/27/2016 SJ Lite Edition"

// DATE "04/12/2019 21:11:24"

// 
// Device: Altera EP4CE6E22C8 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (SystemVerilog) only
// 

`timescale 1 ps/ 1 ps

module fpga_testpcb (
	clk_in,
	mcu_in,
	clk_out,
	mcu_out);
input 	logic clk_in ;
input 	logic mcu_in ;
output 	logic clk_out ;
output 	logic mcu_out ;

// Design Ports Information
// clk_out	=>  Location: PIN_111,	 I/O Standard: 2.5 V,	 Current Strength: Default
// mcu_out	=>  Location: PIN_84,	 I/O Standard: 2.5 V,	 Current Strength: Default
// mcu_in	=>  Location: PIN_112,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk_in	=>  Location: PIN_88,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("fpga_testpcb_8_1200mv_85c_v_slow.sdo");
// synopsys translate_on

wire \clk_out~output_o ;
wire \mcu_out~output_o ;
wire \clk_in~input_o ;
wire \clk_in~inputclkctrl_outclk ;
wire \clk_divide[0]~72_combout ;
wire \clk_divide[1]~24_combout ;
wire \clk_divide[1]~25 ;
wire \clk_divide[2]~26_combout ;
wire \clk_divide[2]~27 ;
wire \clk_divide[3]~28_combout ;
wire \clk_divide[3]~29 ;
wire \clk_divide[4]~30_combout ;
wire \clk_divide[4]~31 ;
wire \clk_divide[5]~32_combout ;
wire \clk_divide[5]~33 ;
wire \clk_divide[6]~34_combout ;
wire \clk_divide[6]~35 ;
wire \clk_divide[7]~36_combout ;
wire \clk_divide[7]~37 ;
wire \clk_divide[8]~38_combout ;
wire \clk_divide[8]~39 ;
wire \clk_divide[9]~40_combout ;
wire \clk_divide[9]~41 ;
wire \clk_divide[10]~42_combout ;
wire \clk_divide[10]~43 ;
wire \clk_divide[11]~44_combout ;
wire \clk_divide[11]~45 ;
wire \clk_divide[12]~46_combout ;
wire \clk_divide[12]~47 ;
wire \clk_divide[13]~48_combout ;
wire \clk_divide[13]~49 ;
wire \clk_divide[14]~50_combout ;
wire \clk_divide[14]~51 ;
wire \clk_divide[15]~52_combout ;
wire \clk_divide[15]~53 ;
wire \clk_divide[16]~54_combout ;
wire \clk_divide[16]~55 ;
wire \clk_divide[17]~56_combout ;
wire \clk_divide[17]~57 ;
wire \clk_divide[18]~58_combout ;
wire \clk_divide[18]~59 ;
wire \clk_divide[19]~60_combout ;
wire \clk_divide[19]~61 ;
wire \clk_divide[20]~62_combout ;
wire \clk_divide[20]~63 ;
wire \clk_divide[21]~64_combout ;
wire \clk_divide[21]~65 ;
wire \clk_divide[22]~66_combout ;
wire \clk_divide[22]~67 ;
wire \clk_divide[23]~68_combout ;
wire \clk_divide[23]~69 ;
wire \clk_divide[24]~70_combout ;
wire \mcu_in~input_o ;
wire [24:0] clk_divide;


// Location: IOOBUF_X30_Y24_N23
cycloneive_io_obuf \clk_out~output (
	.i(clk_divide[24]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\clk_out~output_o ),
	.obar());
// synopsys translate_off
defparam \clk_out~output .bus_hold = "false";
defparam \clk_out~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X34_Y9_N16
cycloneive_io_obuf \mcu_out~output (
	.i(\mcu_in~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\mcu_out~output_o ),
	.obar());
// synopsys translate_off
defparam \mcu_out~output .bus_hold = "false";
defparam \mcu_out~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X34_Y12_N22
cycloneive_io_ibuf \clk_in~input (
	.i(clk_in),
	.ibar(gnd),
	.o(\clk_in~input_o ));
// synopsys translate_off
defparam \clk_in~input .bus_hold = "false";
defparam \clk_in~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G8
cycloneive_clkctrl \clk_in~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clk_in~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk_in~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clk_in~inputclkctrl .clock_type = "global clock";
defparam \clk_in~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: LCCOMB_X30_Y23_N4
cycloneive_lcell_comb \clk_divide[0]~72 (
// Equation(s):
// \clk_divide[0]~72_combout  = !clk_divide[0]

	.dataa(gnd),
	.datab(gnd),
	.datac(clk_divide[0]),
	.datad(gnd),
	.cin(gnd),
	.combout(\clk_divide[0]~72_combout ),
	.cout());
// synopsys translate_off
defparam \clk_divide[0]~72 .lut_mask = 16'h0F0F;
defparam \clk_divide[0]~72 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X30_Y23_N5
dffeas \clk_divide[0] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[0]~72_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[0]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[0] .is_wysiwyg = "true";
defparam \clk_divide[0] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X30_Y23_N8
cycloneive_lcell_comb \clk_divide[1]~24 (
// Equation(s):
// \clk_divide[1]~24_combout  = (clk_divide[0] & (clk_divide[1] $ (VCC))) # (!clk_divide[0] & (clk_divide[1] & VCC))
// \clk_divide[1]~25  = CARRY((clk_divide[0] & clk_divide[1]))

	.dataa(clk_divide[0]),
	.datab(clk_divide[1]),
	.datac(gnd),
	.datad(vcc),
	.cin(gnd),
	.combout(\clk_divide[1]~24_combout ),
	.cout(\clk_divide[1]~25 ));
// synopsys translate_off
defparam \clk_divide[1]~24 .lut_mask = 16'h6688;
defparam \clk_divide[1]~24 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X30_Y23_N9
dffeas \clk_divide[1] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[1]~24_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[1]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[1] .is_wysiwyg = "true";
defparam \clk_divide[1] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X30_Y23_N10
cycloneive_lcell_comb \clk_divide[2]~26 (
// Equation(s):
// \clk_divide[2]~26_combout  = (clk_divide[2] & (!\clk_divide[1]~25 )) # (!clk_divide[2] & ((\clk_divide[1]~25 ) # (GND)))
// \clk_divide[2]~27  = CARRY((!\clk_divide[1]~25 ) # (!clk_divide[2]))

	.dataa(clk_divide[2]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divide[1]~25 ),
	.combout(\clk_divide[2]~26_combout ),
	.cout(\clk_divide[2]~27 ));
// synopsys translate_off
defparam \clk_divide[2]~26 .lut_mask = 16'h5A5F;
defparam \clk_divide[2]~26 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X30_Y23_N11
dffeas \clk_divide[2] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[2]~26_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[2]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[2] .is_wysiwyg = "true";
defparam \clk_divide[2] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X30_Y23_N12
cycloneive_lcell_comb \clk_divide[3]~28 (
// Equation(s):
// \clk_divide[3]~28_combout  = (clk_divide[3] & (\clk_divide[2]~27  $ (GND))) # (!clk_divide[3] & (!\clk_divide[2]~27  & VCC))
// \clk_divide[3]~29  = CARRY((clk_divide[3] & !\clk_divide[2]~27 ))

	.dataa(gnd),
	.datab(clk_divide[3]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divide[2]~27 ),
	.combout(\clk_divide[3]~28_combout ),
	.cout(\clk_divide[3]~29 ));
// synopsys translate_off
defparam \clk_divide[3]~28 .lut_mask = 16'hC30C;
defparam \clk_divide[3]~28 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X30_Y23_N13
dffeas \clk_divide[3] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[3]~28_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[3]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[3] .is_wysiwyg = "true";
defparam \clk_divide[3] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X30_Y23_N14
cycloneive_lcell_comb \clk_divide[4]~30 (
// Equation(s):
// \clk_divide[4]~30_combout  = (clk_divide[4] & (!\clk_divide[3]~29 )) # (!clk_divide[4] & ((\clk_divide[3]~29 ) # (GND)))
// \clk_divide[4]~31  = CARRY((!\clk_divide[3]~29 ) # (!clk_divide[4]))

	.dataa(gnd),
	.datab(clk_divide[4]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divide[3]~29 ),
	.combout(\clk_divide[4]~30_combout ),
	.cout(\clk_divide[4]~31 ));
// synopsys translate_off
defparam \clk_divide[4]~30 .lut_mask = 16'h3C3F;
defparam \clk_divide[4]~30 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X30_Y23_N15
dffeas \clk_divide[4] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[4]~30_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[4]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[4] .is_wysiwyg = "true";
defparam \clk_divide[4] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X30_Y23_N16
cycloneive_lcell_comb \clk_divide[5]~32 (
// Equation(s):
// \clk_divide[5]~32_combout  = (clk_divide[5] & (\clk_divide[4]~31  $ (GND))) # (!clk_divide[5] & (!\clk_divide[4]~31  & VCC))
// \clk_divide[5]~33  = CARRY((clk_divide[5] & !\clk_divide[4]~31 ))

	.dataa(gnd),
	.datab(clk_divide[5]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divide[4]~31 ),
	.combout(\clk_divide[5]~32_combout ),
	.cout(\clk_divide[5]~33 ));
// synopsys translate_off
defparam \clk_divide[5]~32 .lut_mask = 16'hC30C;
defparam \clk_divide[5]~32 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X30_Y23_N17
dffeas \clk_divide[5] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[5]~32_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[5]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[5] .is_wysiwyg = "true";
defparam \clk_divide[5] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X30_Y23_N18
cycloneive_lcell_comb \clk_divide[6]~34 (
// Equation(s):
// \clk_divide[6]~34_combout  = (clk_divide[6] & (!\clk_divide[5]~33 )) # (!clk_divide[6] & ((\clk_divide[5]~33 ) # (GND)))
// \clk_divide[6]~35  = CARRY((!\clk_divide[5]~33 ) # (!clk_divide[6]))

	.dataa(gnd),
	.datab(clk_divide[6]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divide[5]~33 ),
	.combout(\clk_divide[6]~34_combout ),
	.cout(\clk_divide[6]~35 ));
// synopsys translate_off
defparam \clk_divide[6]~34 .lut_mask = 16'h3C3F;
defparam \clk_divide[6]~34 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X30_Y23_N19
dffeas \clk_divide[6] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[6]~34_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[6]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[6] .is_wysiwyg = "true";
defparam \clk_divide[6] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X30_Y23_N20
cycloneive_lcell_comb \clk_divide[7]~36 (
// Equation(s):
// \clk_divide[7]~36_combout  = (clk_divide[7] & (\clk_divide[6]~35  $ (GND))) # (!clk_divide[7] & (!\clk_divide[6]~35  & VCC))
// \clk_divide[7]~37  = CARRY((clk_divide[7] & !\clk_divide[6]~35 ))

	.dataa(gnd),
	.datab(clk_divide[7]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divide[6]~35 ),
	.combout(\clk_divide[7]~36_combout ),
	.cout(\clk_divide[7]~37 ));
// synopsys translate_off
defparam \clk_divide[7]~36 .lut_mask = 16'hC30C;
defparam \clk_divide[7]~36 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X30_Y23_N21
dffeas \clk_divide[7] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[7]~36_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[7]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[7] .is_wysiwyg = "true";
defparam \clk_divide[7] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X30_Y23_N22
cycloneive_lcell_comb \clk_divide[8]~38 (
// Equation(s):
// \clk_divide[8]~38_combout  = (clk_divide[8] & (!\clk_divide[7]~37 )) # (!clk_divide[8] & ((\clk_divide[7]~37 ) # (GND)))
// \clk_divide[8]~39  = CARRY((!\clk_divide[7]~37 ) # (!clk_divide[8]))

	.dataa(clk_divide[8]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divide[7]~37 ),
	.combout(\clk_divide[8]~38_combout ),
	.cout(\clk_divide[8]~39 ));
// synopsys translate_off
defparam \clk_divide[8]~38 .lut_mask = 16'h5A5F;
defparam \clk_divide[8]~38 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X30_Y23_N23
dffeas \clk_divide[8] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[8]~38_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[8]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[8] .is_wysiwyg = "true";
defparam \clk_divide[8] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X30_Y23_N24
cycloneive_lcell_comb \clk_divide[9]~40 (
// Equation(s):
// \clk_divide[9]~40_combout  = (clk_divide[9] & (\clk_divide[8]~39  $ (GND))) # (!clk_divide[9] & (!\clk_divide[8]~39  & VCC))
// \clk_divide[9]~41  = CARRY((clk_divide[9] & !\clk_divide[8]~39 ))

	.dataa(gnd),
	.datab(clk_divide[9]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divide[8]~39 ),
	.combout(\clk_divide[9]~40_combout ),
	.cout(\clk_divide[9]~41 ));
// synopsys translate_off
defparam \clk_divide[9]~40 .lut_mask = 16'hC30C;
defparam \clk_divide[9]~40 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X30_Y23_N25
dffeas \clk_divide[9] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[9]~40_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[9]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[9] .is_wysiwyg = "true";
defparam \clk_divide[9] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X30_Y23_N26
cycloneive_lcell_comb \clk_divide[10]~42 (
// Equation(s):
// \clk_divide[10]~42_combout  = (clk_divide[10] & (!\clk_divide[9]~41 )) # (!clk_divide[10] & ((\clk_divide[9]~41 ) # (GND)))
// \clk_divide[10]~43  = CARRY((!\clk_divide[9]~41 ) # (!clk_divide[10]))

	.dataa(clk_divide[10]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divide[9]~41 ),
	.combout(\clk_divide[10]~42_combout ),
	.cout(\clk_divide[10]~43 ));
// synopsys translate_off
defparam \clk_divide[10]~42 .lut_mask = 16'h5A5F;
defparam \clk_divide[10]~42 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X30_Y23_N27
dffeas \clk_divide[10] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[10]~42_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[10]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[10] .is_wysiwyg = "true";
defparam \clk_divide[10] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X30_Y23_N28
cycloneive_lcell_comb \clk_divide[11]~44 (
// Equation(s):
// \clk_divide[11]~44_combout  = (clk_divide[11] & (\clk_divide[10]~43  $ (GND))) # (!clk_divide[11] & (!\clk_divide[10]~43  & VCC))
// \clk_divide[11]~45  = CARRY((clk_divide[11] & !\clk_divide[10]~43 ))

	.dataa(gnd),
	.datab(clk_divide[11]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divide[10]~43 ),
	.combout(\clk_divide[11]~44_combout ),
	.cout(\clk_divide[11]~45 ));
// synopsys translate_off
defparam \clk_divide[11]~44 .lut_mask = 16'hC30C;
defparam \clk_divide[11]~44 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X30_Y23_N29
dffeas \clk_divide[11] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[11]~44_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[11]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[11] .is_wysiwyg = "true";
defparam \clk_divide[11] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X30_Y23_N30
cycloneive_lcell_comb \clk_divide[12]~46 (
// Equation(s):
// \clk_divide[12]~46_combout  = (clk_divide[12] & (!\clk_divide[11]~45 )) # (!clk_divide[12] & ((\clk_divide[11]~45 ) # (GND)))
// \clk_divide[12]~47  = CARRY((!\clk_divide[11]~45 ) # (!clk_divide[12]))

	.dataa(clk_divide[12]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divide[11]~45 ),
	.combout(\clk_divide[12]~46_combout ),
	.cout(\clk_divide[12]~47 ));
// synopsys translate_off
defparam \clk_divide[12]~46 .lut_mask = 16'h5A5F;
defparam \clk_divide[12]~46 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X30_Y23_N31
dffeas \clk_divide[12] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[12]~46_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[12]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[12] .is_wysiwyg = "true";
defparam \clk_divide[12] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X30_Y22_N0
cycloneive_lcell_comb \clk_divide[13]~48 (
// Equation(s):
// \clk_divide[13]~48_combout  = (clk_divide[13] & (\clk_divide[12]~47  $ (GND))) # (!clk_divide[13] & (!\clk_divide[12]~47  & VCC))
// \clk_divide[13]~49  = CARRY((clk_divide[13] & !\clk_divide[12]~47 ))

	.dataa(gnd),
	.datab(clk_divide[13]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divide[12]~47 ),
	.combout(\clk_divide[13]~48_combout ),
	.cout(\clk_divide[13]~49 ));
// synopsys translate_off
defparam \clk_divide[13]~48 .lut_mask = 16'hC30C;
defparam \clk_divide[13]~48 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X30_Y22_N1
dffeas \clk_divide[13] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[13]~48_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[13]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[13] .is_wysiwyg = "true";
defparam \clk_divide[13] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X30_Y22_N2
cycloneive_lcell_comb \clk_divide[14]~50 (
// Equation(s):
// \clk_divide[14]~50_combout  = (clk_divide[14] & (!\clk_divide[13]~49 )) # (!clk_divide[14] & ((\clk_divide[13]~49 ) # (GND)))
// \clk_divide[14]~51  = CARRY((!\clk_divide[13]~49 ) # (!clk_divide[14]))

	.dataa(gnd),
	.datab(clk_divide[14]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divide[13]~49 ),
	.combout(\clk_divide[14]~50_combout ),
	.cout(\clk_divide[14]~51 ));
// synopsys translate_off
defparam \clk_divide[14]~50 .lut_mask = 16'h3C3F;
defparam \clk_divide[14]~50 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X30_Y22_N3
dffeas \clk_divide[14] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[14]~50_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[14]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[14] .is_wysiwyg = "true";
defparam \clk_divide[14] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X30_Y22_N4
cycloneive_lcell_comb \clk_divide[15]~52 (
// Equation(s):
// \clk_divide[15]~52_combout  = (clk_divide[15] & (\clk_divide[14]~51  $ (GND))) # (!clk_divide[15] & (!\clk_divide[14]~51  & VCC))
// \clk_divide[15]~53  = CARRY((clk_divide[15] & !\clk_divide[14]~51 ))

	.dataa(gnd),
	.datab(clk_divide[15]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divide[14]~51 ),
	.combout(\clk_divide[15]~52_combout ),
	.cout(\clk_divide[15]~53 ));
// synopsys translate_off
defparam \clk_divide[15]~52 .lut_mask = 16'hC30C;
defparam \clk_divide[15]~52 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X30_Y22_N5
dffeas \clk_divide[15] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[15]~52_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[15]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[15] .is_wysiwyg = "true";
defparam \clk_divide[15] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X30_Y22_N6
cycloneive_lcell_comb \clk_divide[16]~54 (
// Equation(s):
// \clk_divide[16]~54_combout  = (clk_divide[16] & (!\clk_divide[15]~53 )) # (!clk_divide[16] & ((\clk_divide[15]~53 ) # (GND)))
// \clk_divide[16]~55  = CARRY((!\clk_divide[15]~53 ) # (!clk_divide[16]))

	.dataa(clk_divide[16]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divide[15]~53 ),
	.combout(\clk_divide[16]~54_combout ),
	.cout(\clk_divide[16]~55 ));
// synopsys translate_off
defparam \clk_divide[16]~54 .lut_mask = 16'h5A5F;
defparam \clk_divide[16]~54 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X30_Y22_N7
dffeas \clk_divide[16] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[16]~54_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[16]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[16] .is_wysiwyg = "true";
defparam \clk_divide[16] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X30_Y22_N8
cycloneive_lcell_comb \clk_divide[17]~56 (
// Equation(s):
// \clk_divide[17]~56_combout  = (clk_divide[17] & (\clk_divide[16]~55  $ (GND))) # (!clk_divide[17] & (!\clk_divide[16]~55  & VCC))
// \clk_divide[17]~57  = CARRY((clk_divide[17] & !\clk_divide[16]~55 ))

	.dataa(gnd),
	.datab(clk_divide[17]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divide[16]~55 ),
	.combout(\clk_divide[17]~56_combout ),
	.cout(\clk_divide[17]~57 ));
// synopsys translate_off
defparam \clk_divide[17]~56 .lut_mask = 16'hC30C;
defparam \clk_divide[17]~56 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X30_Y22_N9
dffeas \clk_divide[17] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[17]~56_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[17]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[17] .is_wysiwyg = "true";
defparam \clk_divide[17] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X30_Y22_N10
cycloneive_lcell_comb \clk_divide[18]~58 (
// Equation(s):
// \clk_divide[18]~58_combout  = (clk_divide[18] & (!\clk_divide[17]~57 )) # (!clk_divide[18] & ((\clk_divide[17]~57 ) # (GND)))
// \clk_divide[18]~59  = CARRY((!\clk_divide[17]~57 ) # (!clk_divide[18]))

	.dataa(clk_divide[18]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divide[17]~57 ),
	.combout(\clk_divide[18]~58_combout ),
	.cout(\clk_divide[18]~59 ));
// synopsys translate_off
defparam \clk_divide[18]~58 .lut_mask = 16'h5A5F;
defparam \clk_divide[18]~58 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X30_Y22_N11
dffeas \clk_divide[18] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[18]~58_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[18]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[18] .is_wysiwyg = "true";
defparam \clk_divide[18] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X30_Y22_N12
cycloneive_lcell_comb \clk_divide[19]~60 (
// Equation(s):
// \clk_divide[19]~60_combout  = (clk_divide[19] & (\clk_divide[18]~59  $ (GND))) # (!clk_divide[19] & (!\clk_divide[18]~59  & VCC))
// \clk_divide[19]~61  = CARRY((clk_divide[19] & !\clk_divide[18]~59 ))

	.dataa(clk_divide[19]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divide[18]~59 ),
	.combout(\clk_divide[19]~60_combout ),
	.cout(\clk_divide[19]~61 ));
// synopsys translate_off
defparam \clk_divide[19]~60 .lut_mask = 16'hA50A;
defparam \clk_divide[19]~60 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X30_Y22_N13
dffeas \clk_divide[19] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[19]~60_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[19]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[19] .is_wysiwyg = "true";
defparam \clk_divide[19] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X30_Y22_N14
cycloneive_lcell_comb \clk_divide[20]~62 (
// Equation(s):
// \clk_divide[20]~62_combout  = (clk_divide[20] & (!\clk_divide[19]~61 )) # (!clk_divide[20] & ((\clk_divide[19]~61 ) # (GND)))
// \clk_divide[20]~63  = CARRY((!\clk_divide[19]~61 ) # (!clk_divide[20]))

	.dataa(gnd),
	.datab(clk_divide[20]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divide[19]~61 ),
	.combout(\clk_divide[20]~62_combout ),
	.cout(\clk_divide[20]~63 ));
// synopsys translate_off
defparam \clk_divide[20]~62 .lut_mask = 16'h3C3F;
defparam \clk_divide[20]~62 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X30_Y22_N15
dffeas \clk_divide[20] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[20]~62_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[20]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[20] .is_wysiwyg = "true";
defparam \clk_divide[20] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X30_Y22_N16
cycloneive_lcell_comb \clk_divide[21]~64 (
// Equation(s):
// \clk_divide[21]~64_combout  = (clk_divide[21] & (\clk_divide[20]~63  $ (GND))) # (!clk_divide[21] & (!\clk_divide[20]~63  & VCC))
// \clk_divide[21]~65  = CARRY((clk_divide[21] & !\clk_divide[20]~63 ))

	.dataa(gnd),
	.datab(clk_divide[21]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divide[20]~63 ),
	.combout(\clk_divide[21]~64_combout ),
	.cout(\clk_divide[21]~65 ));
// synopsys translate_off
defparam \clk_divide[21]~64 .lut_mask = 16'hC30C;
defparam \clk_divide[21]~64 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X30_Y22_N17
dffeas \clk_divide[21] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[21]~64_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[21]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[21] .is_wysiwyg = "true";
defparam \clk_divide[21] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X30_Y22_N18
cycloneive_lcell_comb \clk_divide[22]~66 (
// Equation(s):
// \clk_divide[22]~66_combout  = (clk_divide[22] & (!\clk_divide[21]~65 )) # (!clk_divide[22] & ((\clk_divide[21]~65 ) # (GND)))
// \clk_divide[22]~67  = CARRY((!\clk_divide[21]~65 ) # (!clk_divide[22]))

	.dataa(gnd),
	.datab(clk_divide[22]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divide[21]~65 ),
	.combout(\clk_divide[22]~66_combout ),
	.cout(\clk_divide[22]~67 ));
// synopsys translate_off
defparam \clk_divide[22]~66 .lut_mask = 16'h3C3F;
defparam \clk_divide[22]~66 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X30_Y22_N19
dffeas \clk_divide[22] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[22]~66_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[22]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[22] .is_wysiwyg = "true";
defparam \clk_divide[22] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X30_Y22_N20
cycloneive_lcell_comb \clk_divide[23]~68 (
// Equation(s):
// \clk_divide[23]~68_combout  = (clk_divide[23] & (\clk_divide[22]~67  $ (GND))) # (!clk_divide[23] & (!\clk_divide[22]~67  & VCC))
// \clk_divide[23]~69  = CARRY((clk_divide[23] & !\clk_divide[22]~67 ))

	.dataa(gnd),
	.datab(clk_divide[23]),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_divide[22]~67 ),
	.combout(\clk_divide[23]~68_combout ),
	.cout(\clk_divide[23]~69 ));
// synopsys translate_off
defparam \clk_divide[23]~68 .lut_mask = 16'hC30C;
defparam \clk_divide[23]~68 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X30_Y22_N21
dffeas \clk_divide[23] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[23]~68_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[23]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[23] .is_wysiwyg = "true";
defparam \clk_divide[23] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X30_Y22_N22
cycloneive_lcell_comb \clk_divide[24]~70 (
// Equation(s):
// \clk_divide[24]~70_combout  = clk_divide[24] $ (\clk_divide[23]~69 )

	.dataa(clk_divide[24]),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.cin(\clk_divide[23]~69 ),
	.combout(\clk_divide[24]~70_combout ),
	.cout());
// synopsys translate_off
defparam \clk_divide[24]~70 .lut_mask = 16'h5A5A;
defparam \clk_divide[24]~70 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X30_Y22_N23
dffeas \clk_divide[24] (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\clk_divide[24]~70_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(clk_divide[24]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divide[24] .is_wysiwyg = "true";
defparam \clk_divide[24] .power_up = "low";
// synopsys translate_on

// Location: IOIBUF_X28_Y24_N1
cycloneive_io_ibuf \mcu_in~input (
	.i(mcu_in),
	.ibar(gnd),
	.o(\mcu_in~input_o ));
// synopsys translate_off
defparam \mcu_in~input .bus_hold = "false";
defparam \mcu_in~input .simulate_z_as = "z";
// synopsys translate_on

assign clk_out = \clk_out~output_o ;

assign mcu_out = \mcu_out~output_o ;

endmodule
