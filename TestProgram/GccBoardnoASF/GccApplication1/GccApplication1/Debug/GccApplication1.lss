
GccApplication1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003a0  00400000  00400000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     0000042c  20000000  004003a0  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000040  2000042c  004007cc  0002042c  2**2
                  ALLOC
  3 .stack        00000404  2000046c  0040080c  0002042c  2**0
                  ALLOC
  4 .heap         00000200  20000870  00400c10  0002042c  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  0002042c  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020456  2**0
                  CONTENTS, READONLY
  7 .debug_info   0000135e  00000000  00000000  000204af  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000335  00000000  00000000  0002180d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000008b  00000000  00000000  00021b42  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000078  00000000  00000000  00021bcd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00021c45  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000c6e2  00000000  00000000  00021c8d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   000013b4  00000000  00000000  0002e36f  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0003c07b  00000000  00000000  0002f723  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00000260  00000000  00000000  0006b7a0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	70 08 00 20 3d 01 40 00 39 01 40 00 39 01 40 00     p.. =.@.9.@.9.@.
  400010:	39 01 40 00 39 01 40 00 39 01 40 00 00 00 00 00     9.@.9.@.9.@.....
	...
  40002c:	39 01 40 00 39 01 40 00 00 00 00 00 39 01 40 00     9.@.9.@.....9.@.
  40003c:	39 01 40 00 39 01 40 00 39 01 40 00 39 01 40 00     9.@.9.@.9.@.9.@.
  40004c:	39 01 40 00 39 01 40 00 39 01 40 00 39 01 40 00     9.@.9.@.9.@.9.@.
  40005c:	00 00 00 00 39 01 40 00 39 01 40 00 00 00 00 00     ....9.@.9.@.....
  40006c:	39 01 40 00 39 01 40 00 00 00 00 00 39 01 40 00     9.@.9.@.....9.@.
  40007c:	39 01 40 00 00 00 00 00 00 00 00 00 39 01 40 00     9.@.........9.@.
  40008c:	39 01 40 00 39 01 40 00 39 01 40 00 39 01 40 00     9.@.9.@.9.@.9.@.
  40009c:	39 01 40 00 39 01 40 00 39 01 40 00 00 00 00 00     9.@.9.@.9.@.....
	...
  4000b4:	39 01 40 00 39 01 40 00 39 01 40 00 39 01 40 00     9.@.9.@.9.@.9.@.
  4000c4:	39 01 40 00 39 01 40 00                             9.@.9.@.

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	2000042c 	.word	0x2000042c
  4000e8:	00000000 	.word	0x00000000
  4000ec:	004003a0 	.word	0x004003a0

004000f0 <frame_dummy>:
  4000f0:	4b0c      	ldr	r3, [pc, #48]	; (400124 <frame_dummy+0x34>)
  4000f2:	b143      	cbz	r3, 400106 <frame_dummy+0x16>
  4000f4:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x38>)
  4000f6:	490d      	ldr	r1, [pc, #52]	; (40012c <frame_dummy+0x3c>)
  4000f8:	b510      	push	{r4, lr}
  4000fa:	f3af 8000 	nop.w
  4000fe:	480c      	ldr	r0, [pc, #48]	; (400130 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b923      	cbnz	r3, 40010e <frame_dummy+0x1e>
  400104:	bd10      	pop	{r4, pc}
  400106:	480a      	ldr	r0, [pc, #40]	; (400130 <frame_dummy+0x40>)
  400108:	6803      	ldr	r3, [r0, #0]
  40010a:	b933      	cbnz	r3, 40011a <frame_dummy+0x2a>
  40010c:	4770      	bx	lr
  40010e:	4b09      	ldr	r3, [pc, #36]	; (400134 <frame_dummy+0x44>)
  400110:	2b00      	cmp	r3, #0
  400112:	d0f7      	beq.n	400104 <frame_dummy+0x14>
  400114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400118:	4718      	bx	r3
  40011a:	4b06      	ldr	r3, [pc, #24]	; (400134 <frame_dummy+0x44>)
  40011c:	2b00      	cmp	r3, #0
  40011e:	d0f5      	beq.n	40010c <frame_dummy+0x1c>
  400120:	4718      	bx	r3
  400122:	bf00      	nop
  400124:	00000000 	.word	0x00000000
  400128:	004003a0 	.word	0x004003a0
  40012c:	20000430 	.word	0x20000430
  400130:	004003a0 	.word	0x004003a0
  400134:	00000000 	.word	0x00000000

00400138 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  400138:	e7fe      	b.n	400138 <Dummy_Handler>
	...

0040013c <Reset_Handler>:
{
  40013c:	b508      	push	{r3, lr}
        if (pSrc != pDest) {
  40013e:	4b17      	ldr	r3, [pc, #92]	; (40019c <Reset_Handler+0x60>)
  400140:	4a17      	ldr	r2, [pc, #92]	; (4001a0 <Reset_Handler+0x64>)
  400142:	429a      	cmp	r2, r3
  400144:	d010      	beq.n	400168 <Reset_Handler+0x2c>
                for (; pDest < &_erelocate;) {
  400146:	4b17      	ldr	r3, [pc, #92]	; (4001a4 <Reset_Handler+0x68>)
  400148:	4a14      	ldr	r2, [pc, #80]	; (40019c <Reset_Handler+0x60>)
  40014a:	429a      	cmp	r2, r3
  40014c:	d20c      	bcs.n	400168 <Reset_Handler+0x2c>
  40014e:	3b01      	subs	r3, #1
  400150:	1a9b      	subs	r3, r3, r2
  400152:	f023 0303 	bic.w	r3, r3, #3
  400156:	3304      	adds	r3, #4
  400158:	4413      	add	r3, r2
  40015a:	4911      	ldr	r1, [pc, #68]	; (4001a0 <Reset_Handler+0x64>)
                        *pDest++ = *pSrc++;
  40015c:	f851 0b04 	ldr.w	r0, [r1], #4
  400160:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  400164:	429a      	cmp	r2, r3
  400166:	d1f9      	bne.n	40015c <Reset_Handler+0x20>
        for (pDest = &_szero; pDest < &_ezero;) {
  400168:	4b0f      	ldr	r3, [pc, #60]	; (4001a8 <Reset_Handler+0x6c>)
  40016a:	4a10      	ldr	r2, [pc, #64]	; (4001ac <Reset_Handler+0x70>)
  40016c:	429a      	cmp	r2, r3
  40016e:	d20a      	bcs.n	400186 <Reset_Handler+0x4a>
  400170:	3b01      	subs	r3, #1
  400172:	1a9b      	subs	r3, r3, r2
  400174:	f023 0303 	bic.w	r3, r3, #3
  400178:	3304      	adds	r3, #4
  40017a:	4413      	add	r3, r2
                *pDest++ = 0;
  40017c:	2100      	movs	r1, #0
  40017e:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  400182:	4293      	cmp	r3, r2
  400184:	d1fb      	bne.n	40017e <Reset_Handler+0x42>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  400186:	4a0a      	ldr	r2, [pc, #40]	; (4001b0 <Reset_Handler+0x74>)
  400188:	4b0a      	ldr	r3, [pc, #40]	; (4001b4 <Reset_Handler+0x78>)
  40018a:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  40018e:	6093      	str	r3, [r2, #8]
        __libc_init_array();
  400190:	4b09      	ldr	r3, [pc, #36]	; (4001b8 <Reset_Handler+0x7c>)
  400192:	4798      	blx	r3
        main();
  400194:	4b09      	ldr	r3, [pc, #36]	; (4001bc <Reset_Handler+0x80>)
  400196:	4798      	blx	r3
  400198:	e7fe      	b.n	400198 <Reset_Handler+0x5c>
  40019a:	bf00      	nop
  40019c:	20000000 	.word	0x20000000
  4001a0:	004003a0 	.word	0x004003a0
  4001a4:	2000042c 	.word	0x2000042c
  4001a8:	2000046c 	.word	0x2000046c
  4001ac:	2000042c 	.word	0x2000042c
  4001b0:	e000ed00 	.word	0xe000ed00
  4001b4:	00400000 	.word	0x00400000
  4001b8:	00400209 	.word	0x00400209
  4001bc:	004001d1 	.word	0x004001d1

004001c0 <SystemInit>:
   */
  
  //setting up peripheral clock

  /* Set FWS according to default clock configuration */
  EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
  4001c0:	f44f 7280 	mov.w	r2, #256	; 0x100
  4001c4:	4b01      	ldr	r3, [pc, #4]	; (4001cc <SystemInit+0xc>)
  4001c6:	601a      	str	r2, [r3, #0]
  4001c8:	4770      	bx	lr
  4001ca:	bf00      	nop
  4001cc:	400e0a00 	.word	0x400e0a00

004001d0 <main>:

#include "sam.h"


int main(void)
{
  4001d0:	b508      	push	{r3, lr}
    /* Initialize the SAM system */
    SystemInit();
  4001d2:	4b09      	ldr	r3, [pc, #36]	; (4001f8 <main+0x28>)
  4001d4:	4798      	blx	r3
	//enable the peripheral clock
	//just an enable (doesn't care about writing 0), so we don't |=
	//from the peripherals table on P50 of the SAM4S datasheet PIOA has instance ID 11
	//first need to disable write protection
	//this is done by writing 0x504D43 (“PMC” in ASCII) to [31:8] in PMC write protection mode register, and 1 in bit 0 (page 554)
	PMC->PMC_WPMR = PMC_WPMR_WPKEY_PASSWD;
  4001d6:	4b09      	ldr	r3, [pc, #36]	; (4001fc <main+0x2c>)
  4001d8:	4a09      	ldr	r2, [pc, #36]	; (400200 <main+0x30>)
  4001da:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
	//now we enable the clock for peripheral #11 (PIOA p50)
	PMC->PMC_PCER0 = PMC_PCER0_PID11; 
  4001de:	f44f 6200 	mov.w	r2, #2048	; 0x800
  4001e2:	611a      	str	r2, [r3, #16]
	
	//next we set the desired pin (PA26) as an output (P588)
	//first need to disable write protection (P633)
	PIOA->PIO_WPMR = PIO_WPMR_WPKEY_PASSWD;
  4001e4:	f503 6320 	add.w	r3, r3, #2560	; 0xa00
  4001e8:	4a06      	ldr	r2, [pc, #24]	; (400204 <main+0x34>)
  4001ea:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
	//Now we set the PIO to control pin 26 (bit 26 of PIO_PER)
	//should we be using REG_PIOA_Per in pioa.h?
	PIOA->PIO_PER  = PIO_PER_P26;
  4001ee:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  4001f2:	601a      	str	r2, [r3, #0]
	//we now set the LED high, by writing a 1 in pin 26 of PIO_OER
	PIOA->PIO_OER  = PIO_OER_P26;
  4001f4:	611a      	str	r2, [r3, #16]
  4001f6:	e7fe      	b.n	4001f6 <main+0x26>
  4001f8:	004001c1 	.word	0x004001c1
  4001fc:	400e0400 	.word	0x400e0400
  400200:	504d4300 	.word	0x504d4300
  400204:	50494f00 	.word	0x50494f00

00400208 <__libc_init_array>:
  400208:	b570      	push	{r4, r5, r6, lr}
  40020a:	4e0f      	ldr	r6, [pc, #60]	; (400248 <__libc_init_array+0x40>)
  40020c:	4d0f      	ldr	r5, [pc, #60]	; (40024c <__libc_init_array+0x44>)
  40020e:	1b76      	subs	r6, r6, r5
  400210:	10b6      	asrs	r6, r6, #2
  400212:	bf18      	it	ne
  400214:	2400      	movne	r4, #0
  400216:	d005      	beq.n	400224 <__libc_init_array+0x1c>
  400218:	3401      	adds	r4, #1
  40021a:	f855 3b04 	ldr.w	r3, [r5], #4
  40021e:	4798      	blx	r3
  400220:	42a6      	cmp	r6, r4
  400222:	d1f9      	bne.n	400218 <__libc_init_array+0x10>
  400224:	4e0a      	ldr	r6, [pc, #40]	; (400250 <__libc_init_array+0x48>)
  400226:	4d0b      	ldr	r5, [pc, #44]	; (400254 <__libc_init_array+0x4c>)
  400228:	1b76      	subs	r6, r6, r5
  40022a:	f000 f8a7 	bl	40037c <_init>
  40022e:	10b6      	asrs	r6, r6, #2
  400230:	bf18      	it	ne
  400232:	2400      	movne	r4, #0
  400234:	d006      	beq.n	400244 <__libc_init_array+0x3c>
  400236:	3401      	adds	r4, #1
  400238:	f855 3b04 	ldr.w	r3, [r5], #4
  40023c:	4798      	blx	r3
  40023e:	42a6      	cmp	r6, r4
  400240:	d1f9      	bne.n	400236 <__libc_init_array+0x2e>
  400242:	bd70      	pop	{r4, r5, r6, pc}
  400244:	bd70      	pop	{r4, r5, r6, pc}
  400246:	bf00      	nop
  400248:	00400388 	.word	0x00400388
  40024c:	00400388 	.word	0x00400388
  400250:	00400390 	.word	0x00400390
  400254:	00400388 	.word	0x00400388

00400258 <register_fini>:
  400258:	4b02      	ldr	r3, [pc, #8]	; (400264 <register_fini+0xc>)
  40025a:	b113      	cbz	r3, 400262 <register_fini+0xa>
  40025c:	4802      	ldr	r0, [pc, #8]	; (400268 <register_fini+0x10>)
  40025e:	f000 b805 	b.w	40026c <atexit>
  400262:	4770      	bx	lr
  400264:	00000000 	.word	0x00000000
  400268:	00400279 	.word	0x00400279

0040026c <atexit>:
  40026c:	2300      	movs	r3, #0
  40026e:	4601      	mov	r1, r0
  400270:	461a      	mov	r2, r3
  400272:	4618      	mov	r0, r3
  400274:	f000 b81e 	b.w	4002b4 <__register_exitproc>

00400278 <__libc_fini_array>:
  400278:	b538      	push	{r3, r4, r5, lr}
  40027a:	4c0a      	ldr	r4, [pc, #40]	; (4002a4 <__libc_fini_array+0x2c>)
  40027c:	4d0a      	ldr	r5, [pc, #40]	; (4002a8 <__libc_fini_array+0x30>)
  40027e:	1b64      	subs	r4, r4, r5
  400280:	10a4      	asrs	r4, r4, #2
  400282:	d00a      	beq.n	40029a <__libc_fini_array+0x22>
  400284:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  400288:	3b01      	subs	r3, #1
  40028a:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  40028e:	3c01      	subs	r4, #1
  400290:	f855 3904 	ldr.w	r3, [r5], #-4
  400294:	4798      	blx	r3
  400296:	2c00      	cmp	r4, #0
  400298:	d1f9      	bne.n	40028e <__libc_fini_array+0x16>
  40029a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40029e:	f000 b877 	b.w	400390 <_fini>
  4002a2:	bf00      	nop
  4002a4:	004003a0 	.word	0x004003a0
  4002a8:	0040039c 	.word	0x0040039c

004002ac <__retarget_lock_acquire_recursive>:
  4002ac:	4770      	bx	lr
  4002ae:	bf00      	nop

004002b0 <__retarget_lock_release_recursive>:
  4002b0:	4770      	bx	lr
  4002b2:	bf00      	nop

004002b4 <__register_exitproc>:
  4002b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4002b8:	4d2c      	ldr	r5, [pc, #176]	; (40036c <__register_exitproc+0xb8>)
  4002ba:	4606      	mov	r6, r0
  4002bc:	6828      	ldr	r0, [r5, #0]
  4002be:	4698      	mov	r8, r3
  4002c0:	460f      	mov	r7, r1
  4002c2:	4691      	mov	r9, r2
  4002c4:	f7ff fff2 	bl	4002ac <__retarget_lock_acquire_recursive>
  4002c8:	4b29      	ldr	r3, [pc, #164]	; (400370 <__register_exitproc+0xbc>)
  4002ca:	681c      	ldr	r4, [r3, #0]
  4002cc:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  4002d0:	2b00      	cmp	r3, #0
  4002d2:	d03e      	beq.n	400352 <__register_exitproc+0x9e>
  4002d4:	685a      	ldr	r2, [r3, #4]
  4002d6:	2a1f      	cmp	r2, #31
  4002d8:	dc1c      	bgt.n	400314 <__register_exitproc+0x60>
  4002da:	f102 0e01 	add.w	lr, r2, #1
  4002de:	b176      	cbz	r6, 4002fe <__register_exitproc+0x4a>
  4002e0:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  4002e4:	2401      	movs	r4, #1
  4002e6:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  4002ea:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  4002ee:	4094      	lsls	r4, r2
  4002f0:	4320      	orrs	r0, r4
  4002f2:	2e02      	cmp	r6, #2
  4002f4:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  4002f8:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  4002fc:	d023      	beq.n	400346 <__register_exitproc+0x92>
  4002fe:	3202      	adds	r2, #2
  400300:	f8c3 e004 	str.w	lr, [r3, #4]
  400304:	6828      	ldr	r0, [r5, #0]
  400306:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  40030a:	f7ff ffd1 	bl	4002b0 <__retarget_lock_release_recursive>
  40030e:	2000      	movs	r0, #0
  400310:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400314:	4b17      	ldr	r3, [pc, #92]	; (400374 <__register_exitproc+0xc0>)
  400316:	b30b      	cbz	r3, 40035c <__register_exitproc+0xa8>
  400318:	f44f 70c8 	mov.w	r0, #400	; 0x190
  40031c:	f3af 8000 	nop.w
  400320:	4603      	mov	r3, r0
  400322:	b1d8      	cbz	r0, 40035c <__register_exitproc+0xa8>
  400324:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  400328:	6002      	str	r2, [r0, #0]
  40032a:	2100      	movs	r1, #0
  40032c:	6041      	str	r1, [r0, #4]
  40032e:	460a      	mov	r2, r1
  400330:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  400334:	f04f 0e01 	mov.w	lr, #1
  400338:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  40033c:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  400340:	2e00      	cmp	r6, #0
  400342:	d0dc      	beq.n	4002fe <__register_exitproc+0x4a>
  400344:	e7cc      	b.n	4002e0 <__register_exitproc+0x2c>
  400346:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  40034a:	430c      	orrs	r4, r1
  40034c:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  400350:	e7d5      	b.n	4002fe <__register_exitproc+0x4a>
  400352:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  400356:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  40035a:	e7bb      	b.n	4002d4 <__register_exitproc+0x20>
  40035c:	6828      	ldr	r0, [r5, #0]
  40035e:	f7ff ffa7 	bl	4002b0 <__retarget_lock_release_recursive>
  400362:	f04f 30ff 	mov.w	r0, #4294967295
  400366:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40036a:	bf00      	nop
  40036c:	20000428 	.word	0x20000428
  400370:	00400378 	.word	0x00400378
  400374:	00000000 	.word	0x00000000

00400378 <_global_impure_ptr>:
  400378:	20000000                                ... 

0040037c <_init>:
  40037c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40037e:	bf00      	nop
  400380:	bcf8      	pop	{r3, r4, r5, r6, r7}
  400382:	bc08      	pop	{r3}
  400384:	469e      	mov	lr, r3
  400386:	4770      	bx	lr

00400388 <__init_array_start>:
  400388:	00400259 	.word	0x00400259

0040038c <__frame_dummy_init_array_entry>:
  40038c:	004000f1                                ..@.

00400390 <_fini>:
  400390:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  400392:	bf00      	nop
  400394:	bcf8      	pop	{r3, r4, r5, r6, r7}
  400396:	bc08      	pop	{r3}
  400398:	469e      	mov	lr, r3
  40039a:	4770      	bx	lr

0040039c <__fini_array_start>:
  40039c:	004000cd 	.word	0x004000cd
